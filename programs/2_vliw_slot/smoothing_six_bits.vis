[0] = PD + 0 + 0 (s): neighbour = PD + 0 + 0 (s);
[1] = PD + 0 + 0 (s): [6] = up + down + CR (s);
[2] = PD + 0 + 0 (s): neighbour = [1] + 0 + 0 (s);
[3] = PD + 0 + 0 (s): [7] = up + down + CR (s);
[4] = PD + 0 + 0 (s): neighbour = [2] + 0 + 0 (s);
[5] = PD + 0 + 0 (s): [8] = up + down + CR (s);
neighbour = [3] + 0 + 0 (s): nop;
neighbour = [4] + 0 + 0 (s): [9] = up + down + CR (s);
neighbour = [5] + 0 + 0 (s): [10] = up + down + CR (s);
neighbour = [0] + 0 + 0 (s): [11] = up + down + CR (s);
[0] = left + right + CR (s): [12] = 0 + 0 + CR (s);
neighbour = [1] + 0 + 0 (s): nop;
[1] = left + right + CR (s): neighbour = [2] + 0 + 0 (s);
[2] = left + right + CR (s): neighbour = [3] + 0 + 0 (s);
[3] = left + right + CR (s): [0] = [0] + [6] + CR (s);
neighbour = [4] + 0 + 0 (s): [1] = [1] + [7] + CR (s);
[4] = left + right + CR (s): external = [2] + [8] + CR (s);
neighbour = [5] + 0 + 0 (s): external = [3] + [9] + CR (s);
[5] = left + right + CR (s): external = [4] + [10] + CR (s);
[13] = 0 + 0 + CR (s): external = [5] + [11] + CR (s);
nop: external = [13] + [12] + CR (s);
nop: external = 0 + 0 + CR (s);
end